#!/bin/sh
# DUE_VERSION_COMPATIBILITY_TRACKING=1.0.0
# SCRIPT_PURPOSE: Script to run configuration inside the docker container before
# package install.
# CONTEXT: runs inside the container at creation time.
# Note - this is /bin/sh as /bin/bash may not be available.

# Copyright 2021,2022 NVIDIA Corporation.  All rights reserved.
# Copyright 2019,2020 Cumulus Networks, Inc.  All rights reserved.
#
#  SPDX-License-Identifier:     MIT

#
# Note: this script is 'sh' to provide bare minimum functionality to
# allow the install of packages to be used by the post install script.
# ( i.e. Bash ) as those packages may not come pre installed in the container

# Red Hat uses dnf and .rpm
fxnConfigureRedHat()
{
    dnf check-update
    case $? in
        100 )
            echo "Updates are available."
            ;;
        0 )
            echo "No updates are available."
            ;;
        * )
            echo "$0 ERROR! Failed dnf check-update. Exiting."
            exit 1
            ;;
    esac

    # /usr/bin/find is apparently not present in RedHat images?
    # /usr/bin/hostname
    # /usr/bin/pgrep
    dnf install --assumeyes findutils hostname procps $BASE_PACKAGES
    if [ $? != 0 ];then
        echo "$0 ERROR! Failed dnf install. Exiting."
        exit 1
    fi

}

# Suse config is RPM based. Borrow Red Hat configuration for now.
fxnConfigureSuse()
{
    # Refresh repositories
    zypper refresh
    case $? in
        100 )
            echo "Updates are available."
            ;;
        0 )
            echo "No updates are available."
            ;;
        * )
            echo "$0 ERROR! Failed dnf check-update. Exiting."
            exit 1
            ;;
    esac

    # /usr/bin/find is apparently not present in RedHat images?
    # /usr/bin/hostname
    # /usr/bin/pgrep
    zypper --non-interactive install awk  hostname procps $BASE_PACKAGES
    if [ $? != 0 ];then
        echo "$0 ERROR! Failed zypper install. Exiting."
        exit 1
    fi
}

# Debian uses APT and .deb
fxnConfigureDebian()
{
    apt-get update
    if [ $? != 0 ];then
        echo "$0 ERROR! Failed apt-get update. Exiting."
        exit 1
    fi

    #
    # APT install just these packages.
    # Don't ask questions.
    # Don't get clever.
    #
    DEBIAN_FRONTEND=noninteractive \
                   apt-get install \
                   --assume-yes \
                   --no-install-recommends \
                   $BASE_PACKAGES

    if [ $? != 0 ];then
        echo "$0 ERROR! Failed apt-get install. Exiting."
        exit 1
    fi

    #
    # Check for any local software to install.
    # This code is responsible for being smart enough to handle
    # the format of whatever is found.
    #
    if [ -d /due-configuration/pre-install-local ];then
        echo "Pre installing local software:"
        cd /due-configuration/pre-install-local
        ls -l
        # Install packages (expect dependency errors)
        sudo dpkg -i *.deb
        # Resolve dependency errors with --fix-broken
        apt-get install --assume-yes --fix-broken || exit 1
        echo "Pre installing local software: DONE"
    fi

}

echo " ___________________________________________________________________________ "
echo "|"
echo "| Running REPLACE_IMAGE_NAME pre install configuration."
echo "|___________________________________________________________________________"

if [ ! -e /build ];then
    echo "$0 Creating a /build directory as a common build mount point."
    mkdir /build
    chmod a+w /build
fi

#
# Initial install of packages required for DUE to behave itself.
# These have to come from the container's package repository
# The important package here is gnupg, as it is needed for
# any package repository key additions

BASE_PACKAGES="\
    wget \
    bash \
    sudo \
    procps \
    findutils \
    gnupg "


# Pull this in to set variables like ID and NAME
. /etc/os-release


case "$ID" in
    # Red Hat variants
    'fedora' | 'rhel' )
        fxnConfigureRedHat
        ;;

    # SUSE variants
    'opensuse-leap' | 'sles' )
        fxnConfigureSuse
        ;;

    * )
        # Default to Debian variants
        fxnConfigureDebian
        ;;
esac

#
# Add any additional initial configuration here
#

echo " ___________________________________________________________________________ "
echo "|"
echo "| DONE running REPLACE_IMAGE_NAME pre install configuration."
echo "|___________________________________________________________________________"


exit 0

