#!/bin/sh
# DUE_VERSION_COMPATIBILITY_TRACKING=1.0.0
# SCRIPT_PURPOSE: Script to run configuration inside the docker container before
# package install.
# CONTEXT: runs inside the container at creation time.
# Note - this is /bin/sh as /bin/bash may not be available.

# Copyright 2021,2022 NVIDIA Corporation.  All rights reserved.
# Copyright 2019,2020 Cumulus Networks, Inc.  All rights reserved.
#
#  SPDX-License-Identifier:     MIT

#
# Note: this script is 'sh' to provide bare minimum functionality to
# allow the install of packages to be used by the post install script.
# ( i.e. Bash ) as those packages may not come pre installed in the container


PACKAGE_UPDATE_COMMAND=""
PACKAGE_INSTALL_COMMAND=""

# Add any required packages that may not be supplied by default.
OS_SPECIFIC_PACKAGES=""


# Red Hat and SUSE both use rpm, so the logic is similar.
fxnConfigureRPM()
{

    $PACKAGE_UPDATE_COMMAND
    case $? in
        100 )
            echo "Updates are available."
            ;;
        0 )
            echo "No updates are available."
            ;;
        * )
            echo "$0 ERROR! Failed dnf check-update. Exiting."
            exit 1
            ;;
    esac

    # /usr/bin/find is apparently not present in RedHat images?
    # /usr/bin/hostname
    # /usr/bin/pgrep
    $PACKAGE_INSTALL_COMMAND $OS_SPECIFIC_PACKAGES $BASE_PACKAGES
    if [ $? != 0 ];then
        echo "$0 ERROR! Failed [ $PACKAGE_INSTALL_COMMAND ]. Exiting."
        exit 1
    fi

    #
    # Check for any local software to install.
    # This code is responsible for being smart enough to handle
    # the format of whatever is found.
    #

    if [ -d /due-configuration/pre-install-local ];then
        # Use find for package detection so that subdirectories can be used for organization
        # Install packages that:
        #   Work on any architecture
        #   Match this container's architecture.
        PACKAGES=$( find ./ \( -name "*noarch.rpm" -o -name "*.$(uname -p).rpm" \) )

        # As packages are the only post install currently supported,
        # list them if present and install. Otherwise, ignore.
        if [ "$PACKAGES" != "" ];then
            echo "Installing local packages found in post-install-local."

            # yum/dnf/zypper look at packages provided as a whole to resolve dependencies.
            $PACKAGE_INSTALL_COMMAND $PACKAGES || exit 1
            # Additional dependency install required?
            echo "Pre install of local packages completed with exit status [ $? ]"
        fi
    fi
}


# Debian uses APT and .deb
fxnConfigureDebian()
{

    # For older distributions, the package repositories on the Internet may have moved.
    # In that case, a new sources.list file may have been supplied as part of the
    # due-configuration. If so, use it to retry the install.
    if [ -e /due-configuration/filesystem/etc/apt/patch-sources.list ];then
        echo "$0 Found /due-configuration/filesystem/etc/apt/patch-sources.list. Overwriting image version."
        cp /due-configuration/filesystem/etc/apt/patch-sources.list /etc/apt/sources.list
        if [ $? != 0 ];then
            echo "$0 ERROR! Failed to copy patch-sources.list to /etc/apt/sources.list. Exiting."
            exit 1
        fi
    fi
    
    # For older distributions, key expired errors like:
    # W: GPG error: http://deb.debian.org jessie-updates InRelease: The following signatures were invalid: KEYEXPIRED 1668891673
    # may be seen. However, apt does not error out on this, so continue.
    apt-get update
    if [ $? != 0 ];then
        echo "$0 ERROR! Failed apt-get update. Exiting."
        exit 1
    fi

    #
    # APT install just these packages.
    # Don't ask questions.
    # Don't get clever.
    # Use --force-yes to allow older distributions with expired keys to install.
    #
    DEBIAN_FRONTEND=noninteractive \
                   apt-get install \
                   --assume-yes \
                   --force-yes \
                   --no-install-recommends \
                   $USEFUL_PACKAGES \
                   $BASE_PACKAGES

    if [ $? != 0 ];then
        echo "$0 ERROR! Failed initial apt-get install."
        exit 1
    fi

    #
    # Check for any local software to install.
    # This code is responsible for being smart enough to handle
    # the format of whatever is found.
    #  --force-yes is used with apt to support expired distributions,
    #  and to install what the user has explicitly provided in pre-install-local
    #
    if [ -d /due-configuration/pre-install-local ];then
        echo "Pre installing local software:"
        cd /due-configuration/pre-install-local || exit 1
        ls -l
        # Install packages (expect dependency errors)
        sudo dpkg -i *.deb
        # Resolve dependency errors with --fix-broken
        apt-get install --assume-yes --force-yes --fix-broken || exit 1
        echo "Pre installing local software: DONE"
    fi

}

echo " ___________________________________________________________________________ "
echo "|"
echo "| Running REPLACE_IMAGE_NAME pre install configuration."
echo "|___________________________________________________________________________"

if [ ! -e /build ];then
    echo "$0 Creating a /build directory as a common build mount point."
    mkdir /build
    chmod a+w /build
fi

#
# Initial install of packages required for DUE to behave itself.
# These have to come from the container's package repository
# The important package here is gnupg, as it is needed for
# any package repository key additions

BASE_PACKAGES="\
    wget \
    bash \
    sudo \
    procps \
    findutils \
    gnupg "

# faketime allows developers to hack around expired keys for older distributions, like Debian 8
# ...but it may not be available in all distributions.
# Example of use:  sudo faketime '2018-01-01 00:00:01' apt-get update
USEFUL_PACKAGES="faketime "

# Pull this in to set variables like ID and NAME
. /etc/os-release


case "$ID" in
    # Red Hat variants
    'fedora' | 'rhel' )
        PACKAGE_UPDATE_COMMAND=" dnf check-update "
        PACKAGE_INSTALL_COMMAND=" dnf install --assumeyes "
        OS_SPECIFIC_PACKAGES=" findutils hostname procps "
        fxnConfigureRPM 'redhat'
        ;;

    # SUSE variants
    'opensuse-leap' | 'sles' )
        PACKAGE_UPDATE_COMMAND=" zypper refresh "
        PACKAGE_INSTALL_COMMAND=" zypper --non-interactive install "
        OS_SPECIFIC_PACKAGES=" awk  hostname procps "
        fxnConfigureRPM 'suse'
        ;;

    * )
        # Default to Debian variants
        fxnConfigureDebian
        ;;
esac

#
# Add any additional initial configuration here
#

echo " ___________________________________________________________________________ "
echo "|"
echo "| DONE running REPLACE_IMAGE_NAME pre install configuration."
echo "|___________________________________________________________________________"


exit 0

